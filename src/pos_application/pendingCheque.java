/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pos_application;

import Dependency.db;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mayan
 */
public class pendingCheque extends javax.swing.JPanel {

    /**
     * Creates new form pendingCheque
     */
    public pendingCheque() {
        initComponents();
        tb_load();
    }
    
    
    private void tb_load() {
    // To load MySQL table to jTable
    try {
        DefaultTableModel dt = (DefaultTableModel) jTable1.getModel();
        dt.setRowCount(0);
        Statement s = db.mycon().createStatement();
        
        // Get today's date
        Date today = new Date(System.currentTimeMillis());

        // Format today's date as a string in dd-mm-yyyy format
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String todayString = dateFormat.format(today);
        
        String query = "SELECT supplier_id, supplier_name, cheque_date, total_amount, payment_status,cheque_number FROM purchases WHERE payment_method = 'Cheque' AND STR_TO_DATE(cheque_date, '%d-%m-%Y') >= STR_TO_DATE('" + todayString + "', '%d-%m-%Y')";
        
        // Check if the checkbox is selected
        if (jCheckBox1.isSelected()) {
            query += " AND payment_status = 'Unpaid'";
        }

        ResultSet rs = s.executeQuery(query);
        while (rs.next()) {
            Vector v = new Vector();
            v.add(rs.getString("supplier_id"));
            v.add(rs.getString("supplier_name"));
            v.add(rs.getString("cheque_date"));
            v.add(rs.getString("total_amount"));
            v.add(rs.getString("payment_status"));
            v.add(rs.getString("cheque_number"));
            dt.addRow(v);
        }
    } catch (SQLException e) {
        System.out.println(e);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        searchbytextfield2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new rojerusan.RSTableMetro();
        jCheckBox1 = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(217, 227, 241));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Pending Cheques");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Search By:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Date" }));

        searchbytextfield2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbytextfield2ActionPerformed(evt);
            }
        });
        searchbytextfield2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbytextfield2KeyReleased(evt);
            }
        });

        jButton1.setText("View All");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(217, 227, 241));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Supplier ID", "Payee (Supplier Name)", "Date", "Total Amount", "Status", "Cheque Number"
            }
        ));
        jTable1.setAltoHead(20);
        jTable1.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        jTable1.setColorBordeHead(new java.awt.Color(0, 112, 192));
        jTable1.setColorFilasBackgound1(new java.awt.Color(217, 227, 241));
        jTable1.setColorFilasBackgound2(new java.awt.Color(217, 227, 241));
        jTable1.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        jTable1.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        jTable1.setFuenteFilas(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setGridColor(new java.awt.Color(217, 227, 241));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jCheckBox1.setText("Show Only Unpresented Cheques");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(jLabel1)
                        .addGap(0, 422, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(searchbytextfield2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchbytextfield2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(jCheckBox1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchbytextfield2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbytextfield2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchbytextfield2ActionPerformed

    private void searchbytextfield2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbytextfield2KeyReleased
    // Search By Logic
    String name = searchbytextfield2.getText();
    String searchby = (String) jComboBox1.getSelectedItem();

    try {
        DefaultTableModel dt = (DefaultTableModel) jTable1.getModel();
        dt.setRowCount(0);
        Statement s = db.mycon().createStatement();

        String query = "";

        // Check the selected search criteria and construct the query accordingly
        if (searchby.equals("Name")) {
            query = "SELECT supplier_id, supplier_name, cheque_date, total_amount, payment_status, cheque_number FROM purchases WHERE payment_method = 'Cheque' AND supplier_name LIKE '%" + name + "%'";
        } else if (searchby.equals("Date")) {
            query = "SELECT supplier_id, supplier_name, cheque_date, total_amount, payment_status FROM purchases WHERE payment_method = 'Cheque' AND cheque_date = '" + name + "'";
        }

        // Check if the checkbox is selected
        if (jCheckBox1.isSelected()) {
            query += " AND payment_status = 'Unpaid'";
        }

        ResultSet rs = s.executeQuery(query);
        while (rs.next()) {
            Vector v = new Vector();
            v.add(rs.getString("supplier_id"));
            v.add(rs.getString("supplier_name"));
            v.add(rs.getString("cheque_date"));
            v.add(rs.getString("total_amount"));
            v.add(rs.getString("payment_status"));
            v.add(rs.getString("cheque_number"));
            dt.addRow(v);
        }
    } catch (SQLException e) {
        tb_load(); // Load the default data or handle the exception appropriately
    }
    }//GEN-LAST:event_searchbytextfield2KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         try {
            DefaultTableModel dt = (DefaultTableModel) jTable1.getModel();
            dt.setRowCount(0);
            Statement s = db.mycon().createStatement();

            String query = "SELECT supplier_id, supplier_name, cheque_date, total_amount, payment_status,cheque_number FROM purchases WHERE payment_method = 'Cheque'";

            // Check if the checkbox is selected
            if (jCheckBox1.isSelected()) {
                query += " AND payment_status = 'Unpaid'";
            }

            ResultSet rs = s.executeQuery(query);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("supplier_id"));
                v.add(rs.getString("supplier_name"));
                v.add(rs.getString("cheque_date"));
                v.add(rs.getString("total_amount"));
                v.add(rs.getString("payment_status"));
                v.add(rs.getString("cheque_number"));
                dt.addRow(v);
            }
        } catch (SQLException e) {
            tb_load(); // Load the default data or handle the exception appropriately
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.getSelectedRow();
        if (row != -1) { // Ensure a row is selected
            String payee = jTable1.getValueAt(row, 1).toString();
            String date = jTable1.getValueAt(row, 2).toString();
            String chequenumber = jTable1.getValueAt(row, 5).toString();
            String amount = jTable1.getValueAt(row, 3).toString();
            String status = jTable1.getValueAt(row, 4).toString();
            

            //Products is a class to handle displaying product details
            PaymentConfirmer ConfirmFrame = new PaymentConfirmer();
            ConfirmFrame.setLocationRelativeTo(null);
            ConfirmFrame.setVisible(true);
            ConfirmFrame.setData(payee,date,chequenumber,amount,status);
            ConfirmFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        tb_load();
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private rojerusan.RSTableMetro jTable1;
    private javax.swing.JTextField searchbytextfield2;
    // End of variables declaration//GEN-END:variables
}
